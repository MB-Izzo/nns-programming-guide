---
import { getCollection } from 'astro:content';
import PageLayout from '../../layouts/PageLayout.astro';
// import MarkdownPostLayout from '../../layouts/MarkdownPostLayout.astro';

export async function getStaticPaths() {
  const sortByDate = (a: any, b: any) => { return new Date(b.data.date).getTime() - new Date(a.data.date).getTime() }

  const blogEntries = await getCollection('posts');
  const numberOfPosts = blogEntries.length;
  return blogEntries.sort(sortByDate).map((entry, i) => ({
    params: { slug: entry.slug }, 
    props: { 
        entry,
        prevPost: 
            i + 1 === numberOfPosts 
            ? null
            : blogEntries[i + 1],
        nextPost: 
            i === 0 
            ? null
            : blogEntries[i - 1],

    },
  }));
}

const { entry, prevPost, nextPost } = Astro.props;
const { Content } = await entry.render();
---

<script>
let copyButtonLabel = "Copy code";
let codeBlocks = Array.from(document.querySelectorAll("figure"));

for (let cb of codeBlocks) {
    let wrapper = document.createElement("div");
    wrapper.style.position = "relative";

    let copyButton = document.createElement("button");
    copyButton.className = "copy-code";
    copyButton.innerHTML = copyButtonLabel;

    cb.setAttribute("tabindex", "0");
    cb.appendChild(copyButton);

    cb.parentNode?.insertBefore(wrapper, cb);
    wrapper.appendChild(cb);

    copyButton.addEventListener("click", async () => {
        await copyCode(cb, copyButton);
    });
}

async function copyCode(block: any, button: any) {
  let code = block.querySelector("code");
  let text = code.innerText;

  await navigator.clipboard.writeText(text);
   button.innerText = "Code Copied";

  setTimeout(() => {
    button.innerText = copyButtonLabel;
  }, 700);
}

</script>

<PageLayout>
    <div class="pt-4">
        <a href="/csharpindex" class="mt-4">Retourner à l'index</a>
    </div>
    <section class="content prose prose-mytheme max-w-none pb-10 pt-6">
        <Content />
    </section>
    <div class="flex justify-between pb-12 text-lg">
        {prevPost && <a href={`/posts/${prevPost.slug}/`} class="inline p-3">Précedent: {prevPost.data.title}</a>}
        {nextPost && <a href={`/posts/${nextPost.slug}/`} class="inline p-3">Suivant: {nextPost.data.title}</a>}
    </div>
    
</PageLayout>

<style is:global>
  .content pre > code {
       display: grid; /*  this is way the line will span whole width of `code` component */
    }

    .content [data-rehype-pretty-code-fragment]{
        position: relative;
    }

    .content [data-rehype-pretty-code-title] {
        border-top-left-radius: 0.5rem;
        border-top-right-radius: 0.5rem;
        background-color: rgba(205, 95, 42, 0.8);
        color: rgba(var(--color-text-body));
        padding: 0.5rem 1rem;
    }

    .content pre > code [data-line] {
        border-left: 0.3rem solid transparent;
        padding: 0 0.3rem;
    }

    .content pre > code [data-highlighted-line] {
        background-color: #00240f;
        border-left: 0.3rem solid green;
    }

    .content pre > code[data-line-numbers] {
        counter-reset: line;
    }

    .content pre > code[data-line-numbers] > [data-line]::before {
        counter-increment: line;
        content: counter(line);
        display: inline-block;
        margin-right: 1rem;
        width: 1rem;
        text-align: left;
        color: rgba(255, 255, 255, 0.2);
    }

    .content pre > code > [data-line]::before {
        content: "";
        display: inline-block;
        text-align: right;
    }
 
    .content pre > code[data-line-numbers-max-digits="2"] > [data-line]::before {
        width: 0.6rem;
    }
 
    .content code[data-line-numbers-max-digits="3"] > [data-line]::before {
        width: 2rem;
    }

    .copy-code {
        position: absolute;
        top: 0;
        right: 0;
        font-size: 0.8rem;
        padding: 0.43rem 1rem;
        border-top-right-radius: 0.5rem;
        background-color: rgba(205, 95, 42, 0.9);
    }

    .copy-code:hover {
        background-color: #f2ab37;
    }
</style>
